package main

import (
	"encoding/json"
	"fmt"
	"time"

	//"github.com/json-iterator/go"
	"github.com/tidwall/gjson"
)

// AutoGenerated small
type SmallAutoGenerated struct {
	Name MallName `json:"name"`
	Age  int      `json:"age"`
}
type MallName struct {
	First string `json:"first"`
	Last  string `json:"last"`
}

// JSONAutoGenerated middle
type MiddleAutoGenerated struct {
	Name     MiddleName      `json:"name"`
	Age      int             `json:"age"`
	Children []string        `json:"children"`
	FavMovie string          `json:"fav.movie"`
	Friends  []MiddleFriends `json:"friends"`
}
type MiddleName struct {
	First string `json:"first"`
	Last  string `json:"last"`
}
type MiddleFriends struct {
	First string   `json:"first"`
	Last  string   `json:"last"`
	Age   int      `json:"age"`
	Nets  []string `json:"nets"`
}

// large

type LargeAutoGenerated struct {
	Name     LargeName      `json:"name"`
	Age      int            `json:"age"`
	Children []string       `json:"children"`
	FavMovie string         `json:"fav.movie"`
	Friends  []LargeFriends `json:"friends"`
	Other    Other          `json:"other"`
}
type LargeName struct {
	First string `json:"first"`
	Last  string `json:"last"`
}

type Other1 struct {
	First string   `json:"first"`
	Last  string   `json:"last"`
	Age   int      `json:"age"`
	Nets  []string `json:"nets"`
}
type Other2 struct {
	First string   `json:"first"`
	Last  string   `json:"last"`
	Age   int      `json:"age"`
	Nets  []string `json:"nets"`
}
type LargeFriends struct {
	First  string   `json:"first"`
	Last   string   `json:"last"`
	Other1 Other1   `json:"other1,omitempty"`
	Other2 Other2   `json:"other2,omitempty"`
	Nets   []string `json:"nets"`
	Age    int      `json:"age,omitempty"`
}
type Other struct {
	Friends []LargeFriends `json:"friends"`
}

func StructToJson(p SmallAutoGenerated) string {
	m, err := json.Marshal(p)
	if err != nil {
		fmt.Println(err)
	}

	return string(m)
}

func JsonToStruct(data []byte, p *SmallAutoGenerated) {
	_ = json.Unmarshal(data, p)
}

const jsonSmallStr = `{"name":{"first":"Janet","last":"Prichard"},"age":47}`

func GJSONGetSmallJson() {
	_ = gjson.Get(jsonSmallStr, "age")
}

const jsonMiddleStr = `
{
  "name": {"first": "Tom", "last": "Anderson"},
  "age":37,
  "children": ["Sara","Alex","Jack"],
  "fav.movie": "Deer Hunter",
  "friends": [
    {"first": "Dale", "last": "Murphy", "age": 44, "nets": ["ig", "fb", "tw"]},
    {"first": "Roger", "last": "Craig", "age": 68, "nets": ["fb", "tw"]},
    {"first": "Jane", "last": "Murphy", "age": 47, "nets": ["ig", "tw"]}
  ]
}`

var jsonBigStr = `
{
  "name": {"first": "Tom", "last": "Anderson"},
  "age":37,
  "children": ["Sara","Alex","Jack"],
  "fav.movie": "Deer Hunter",
  "friends": [
    {"first": "Dale", "last": "Murphy", "age": 44, "nets": ["ig", "fb", "tw"]},
    {"first": "Roger", "last": "Craig", "age": 68, "nets": ["fb", "tw"]},
    {"first": "Jane", "last": "Murphy", "age": 47, "nets": ["ig", "tw"]}
  ],


  "other":{
  "friends": [
    {"first": "Dale", "last": "Murphy", "other1":
    {"first": "Dale", "last": "Murphy", "age": 44, "nets": ["ig", "fb", "tw"]},
   "other2":{"first": "Dale", "last": "Murphy", "age": 44, "nets": ["ig", "fb", "tw"]}, "nets": ["ig", "fb", "tw"]},
    {"first": "Roger", "last": "Craig", "age": 68, "nets": ["fb", "tw"]},
    {"first": "Jane", "last": "Murphy", "age": 47, "nets": ["ig", "tw"]}
  ]}

}`

func GJSONMiddleJson() {

	_ = gjson.Get(jsonMiddleStr, "other.1.nets.0")

}

func GJSONBigJson() {

	_ = gjson.Get(jsonBigStr, "other.friends.0.other2.nets.0")

}

func main() {

	timeStr := time.Now().Add(-8 * time.Hour).Format("2006-01-02")
	//fmt.Println("timeStr:", timeStr)
	t, _ := time.ParseInLocation("2006-01-02", timeStr, time.Local)
	timeNumber := t.Unix()

	timeStr1 := time.Now().Add(time.Hour).Format("2006-01-02")
	//fmt.Println("timeStr:", timeStr)
	t1, _ := time.ParseInLocation("2006-01-02", timeStr1, time.Local)
	timeNumber1 := t1.Unix()

	fmt.Println(timeNumber)
	fmt.Println(timeNumber1)

}
